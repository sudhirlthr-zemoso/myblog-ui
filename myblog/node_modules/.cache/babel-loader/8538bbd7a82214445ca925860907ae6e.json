{"ast":null,"code":"var _jsxFileName = \"/home/zadmin/Desktop/blog-react/myblog/src/components/molecules/GetPosts.jsx\";\nimport React from 'react';\nimport { Logincms, Blog, Commentlist, Comment } from '../../cms_pb';\nimport { CmsBlogClient } from '../../cms_grpc_web_pb';\nimport BlogTitle from '../atoms/blog-TitleTextArea';\nimport BlogContent from \"../atoms/blog-ContentTextArea\";\nimport HeaderTag from '../atoms/HeaderTag';\nimport '../molecules/css/Molecules.css';\nimport Search from './Search';\nimport CommentTag from './blog-Comment';\nimport PostForm from './SubmitPostForm';\n\nclass GetPosts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: null,\n      blogs: [],\n      newdata: [],\n      searchTerm: '',\n      commentBlogId: 123,\n      blogCreated: false\n    };\n    this.title = React.createRef();\n    this.content = React.createRef();\n    this.commentBlogId = React.createRef();\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\n    this.handleOnComment = this.handleOnComment.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  componentDidMount() {\n    //userService.getAll().then(users => this.setState({ users }));\n    const {\n      searchTerm\n    } = this.state;\n    var client = new CmsBlogClient('http://localhost:51053');\n    var request = new Logincms();\n    request.setResponsecode(420);\n    request.setResponsemessage(\"Hello\");\n    var header = new Headers(); //var token = \"Bearer \"+this.state.currentUser.token;\n\n    var token = \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0b2tlbiIsImZpcnN0TmFtZSI6IkFhc2h1dG9zaCIsImxhc3ROYW1lXyI6Ikt1bWFyIiwidXNlcmlkIjoiMyIsImVtYWlsIjoic3VkaGlyLmt1bWFyQHplbW9zb2xhYnMuY29tIn0.WWx7j-Tx0xBkRj_VLA0Wpb3_DhhBPSIhmc24t5g0gZc\";\n    console.log(token);\n    client.post(request, {\n      \"Authorization\": token\n    }, (err, response) => {\n      const outerArray = response;\n      {\n        outerArray[\"array\"][1].map(dataitem => {\n          var updateddata = this.state.blogs.concat({\n            blogid: dataitem[0],\n            title: dataitem[4],\n            content: dataitem[1],\n            creationdate: dataitem[5],\n            refuser: dataitem[2],\n            comments: dataitem[3]\n          });\n          this.setState({\n            blogs: updateddata\n          });\n        });\n      }\n    });\n  }\n\n  onDismiss(id) {\n    const isNotId = blog => blog.blogid !== id;\n\n    const updatedList = this.state.blogs.filter(isNotId);\n    this.setState({\n      blogs: updatedList\n    });\n  }\n\n  onSearchChange(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n\n  handleOnSubmit(event) {\n    event.preventDefault();\n    var client = new CmsBlogClient('http://localhost:51053');\n    var request = new Blog();\n    request.setBlogid(123);\n    request.setTitle(this.title.current.value);\n    request.setContent(this.content.current.value); //request.setRefuser(this.state.currentUser.username);\n\n    request.setRefuser(\"sudhirlthr@gmail.com\");\n    let commentList = new Commentlist();\n    request.setComments(commentList);\n    request.setCreationdate(\"2020-03-06\"); // for setting token\n    //var token = \"Bearer \"+this.state.currentUser.token;\n\n    var token = \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0b2tlbiIsImZpcnN0TmFtZSI6IkFhc2h1dG9zaCIsImxhc3ROYW1lXyI6Ikt1bWFyIiwidXNlcmlkIjoiMyIsImVtYWlsIjoic3VkaGlyLmt1bWFyQHplbW9zb2xhYnMuY29tIn0.WWx7j-Tx0xBkRj_VLA0Wpb3_DhhBPSIhmc24t5g0gZc\"; //let updatedData = [];\n\n    client.create(request, {\n      \"Authorization\": token\n    }, (err, response) => {\n      console.log(response);\n    });\n\n    if (!alert('New blog post has been saved!')) {\n      window.location.reload();\n    }\n  }\n\n  handleOnComment(event) {\n    if (event.keyCode == 13 && event.shiftKey == false) {\n      const userCommentContent = event.target.value.trim();\n      const blogid = event.target.id;\n      event.preventDefault();\n      let userComment = new Comment();\n      userComment.setCommentsid(123);\n      userComment.setContent(userCommentContent);\n      userComment.setCommentsdate(Date.now());\n      userComment.setBlogid(blogid); //userComment.setRefuser(this.state.currentUser.username);\n\n      userComment.setRefuser(\"sudhirlthr@gmail.com\");\n      var client = new CmsBlogClient('http://localhost:51053'); // for setting token\n      //var token = \"Bearer \"+this.state.currentUser.token;\n\n      var token = \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0b2tlbiIsImZpcnN0TmFtZSI6IkFhc2h1dG9zaCIsImxhc3ROYW1lXyI6Ikt1bWFyIiwidXNlcmlkIjoiMyIsImVtYWlsIjoic3VkaGlyLmt1bWFyQHplbW9zb2xhYnMuY29tIn0.WWx7j-Tx0xBkRj_VLA0Wpb3_DhhBPSIhmc24t5g0gZc\"; //let updatedData = [];\n\n      client.postcomment(userComment, {\n        \"Authorization\": token\n      }, (err, response) => {\n        console.log(response);\n      }); //if(!alert('Comments saved!')){window.location.reload();}\n\n      this.setState({\n        blogCreated: true\n      });\n    }\n  }\n\n  render() {\n    const {\n      currentUser,\n      users,\n      searchTerm,\n      blogs,\n      blogCreated\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PostForm, {\n      title: this.title,\n      content: this.content,\n      handleOnSubmit: this.handleOnSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"interactions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      value: searchTerm,\n      onChange: this.onSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"leftcolumn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, blogs.filter(isSearched(searchTerm)).map(blog => /*#__PURE__*/React.createElement(\"div\", {\n      key: blog.blogid,\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(BlogTitle, {\n      blogid: blog.blogid,\n      title: blog.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(HeaderTag, {\n      creationdate: blog.creationdate,\n      refuser: blog.refuser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(BlogContent, {\n      blogid: blog.blogid,\n      content: blog.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(CommentTag, {\n      blog: blog,\n      handleOnComment: this.handleOnComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 41\n      }\n    }))))));\n  }\n\n}\n\nfunction isSearched(searchTerm) {\n  return function (blog) {\n    return !searchTerm || blog.title.toLowerCase().includes(searchTerm.toLowerCase());\n  };\n}\n\nexport default GetPosts;","map":{"version":3,"sources":["/home/zadmin/Desktop/blog-react/myblog/src/components/molecules/GetPosts.jsx"],"names":["React","Logincms","Blog","Commentlist","Comment","CmsBlogClient","BlogTitle","BlogContent","HeaderTag","Search","CommentTag","PostForm","GetPosts","Component","constructor","props","state","users","blogs","newdata","searchTerm","commentBlogId","blogCreated","title","createRef","content","handleOnSubmit","bind","handleOnComment","onSearchChange","onDismiss","componentDidMount","client","request","setResponsecode","setResponsemessage","header","Headers","token","console","log","post","err","response","outerArray","map","dataitem","updateddata","concat","blogid","creationdate","refuser","comments","setState","id","isNotId","blog","updatedList","filter","event","target","value","preventDefault","setBlogid","setTitle","current","setContent","setRefuser","commentList","setComments","setCreationdate","create","alert","window","location","reload","keyCode","shiftKey","userCommentContent","trim","userComment","setCommentsid","setCommentsdate","Date","now","postcomment","render","currentUser","isSearched","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Logincms, Blog, Commentlist, Comment } from '../../cms_pb';\nimport { CmsBlogClient } from '../../cms_grpc_web_pb'\n\nimport BlogTitle from '../atoms/blog-TitleTextArea';\nimport BlogContent from \"../atoms/blog-ContentTextArea\";\nimport HeaderTag from '../atoms/HeaderTag';\n\nimport '../molecules/css/Molecules.css'\nimport Search from './Search'\nimport CommentTag from './blog-Comment';\nimport PostForm from './SubmitPostForm'\n\nclass GetPosts extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            users: null,\n            blogs: [],\n            newdata: [],\n            searchTerm: '',\n            commentBlogId: 123,\n            blogCreated: false,\n        };\n        this.title = React.createRef();\n        this.content = React.createRef();\n        this.commentBlogId = React.createRef();\n        this.handleOnSubmit = this.handleOnSubmit.bind(this);\n        this.handleOnComment = this.handleOnComment.bind(this);\n        this.onSearchChange = this.onSearchChange.bind(this);\n        this.onDismiss = this.onDismiss.bind(this);\n    }\n\n    componentDidMount() {\n        //userService.getAll().then(users => this.setState({ users }));\n\n        const { searchTerm } = this.state;\n        var client = new CmsBlogClient('http://localhost:51053');\n        var request = new Logincms();\n\n        request.setResponsecode(420);\n        request.setResponsemessage(\"Hello\");\n        var header = new Headers();\n        //var token = \"Bearer \"+this.state.currentUser.token;\n        var token = \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0b2tlbiIsImZpcnN0TmFtZSI6IkFhc2h1dG9zaCIsImxhc3ROYW1lXyI6Ikt1bWFyIiwidXNlcmlkIjoiMyIsImVtYWlsIjoic3VkaGlyLmt1bWFyQHplbW9zb2xhYnMuY29tIn0.WWx7j-Tx0xBkRj_VLA0Wpb3_DhhBPSIhmc24t5g0gZc\";\n        console.log(token);\n\n\n        client.post(request, {\"Authorization\": token}, (err, response) => {\n            const outerArray = response;\n            {outerArray[\"array\"][1].map((dataitem) => {\n\n                var updateddata = this.state.blogs.concat({\n                    blogid: dataitem[0],\n                    title: dataitem[4],\n                    content: dataitem[1],\n                    creationdate: dataitem[5],\n                    refuser: dataitem[2],\n                    comments: dataitem[3]\n                });\n                this.setState({blogs: updateddata})\n\n            })}\n        });\n    }\n\n    onDismiss(id){\n        const isNotId = blog => blog.blogid !== id;\n        const updatedList = this.state.blogs.filter(isNotId);\n        this.setState({blogs: updatedList});\n    }\n\n    onSearchChange(event){\n        this.setState({ searchTerm: event.target.value })\n    }\n\n    handleOnSubmit(event){\n        event.preventDefault();\n\n        var client = new CmsBlogClient('http://localhost:51053');\n\n        var request = new Blog();\n\n        request.setBlogid(123);\n        request.setTitle(this.title.current.value);\n        request.setContent(this.content.current.value);\n        //request.setRefuser(this.state.currentUser.username);\n        request.setRefuser(\"sudhirlthr@gmail.com\");\n        let commentList = new Commentlist();\n        request.setComments(commentList);\n        request.setCreationdate(\"2020-03-06\");\n\n        // for setting token\n        //var token = \"Bearer \"+this.state.currentUser.token;\n        var token = \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0b2tlbiIsImZpcnN0TmFtZSI6IkFhc2h1dG9zaCIsImxhc3ROYW1lXyI6Ikt1bWFyIiwidXNlcmlkIjoiMyIsImVtYWlsIjoic3VkaGlyLmt1bWFyQHplbW9zb2xhYnMuY29tIn0.WWx7j-Tx0xBkRj_VLA0Wpb3_DhhBPSIhmc24t5g0gZc\";\n\n\n        //let updatedData = [];\n        client.create(request, {\"Authorization\": token}, (err, response) => {\n            console.log(response);\n        });\n        if(!alert('New blog post has been saved!')){window.location.reload();}\n\n    }\n\n\n    handleOnComment(event){\n\n        if (event.keyCode == 13 && event.shiftKey == false){\n            const userCommentContent = event.target.value.trim();\n            const blogid = event.target.id;\n\n            event.preventDefault();\n\n            let userComment = new Comment();\n            userComment.setCommentsid(123);\n            userComment.setContent(userCommentContent);\n            userComment.setCommentsdate(Date.now());\n            userComment.setBlogid(blogid);\n            //userComment.setRefuser(this.state.currentUser.username);\n            userComment.setRefuser(\"sudhirlthr@gmail.com\");\n\n            var client = new CmsBlogClient('http://localhost:51053');\n            // for setting token\n            //var token = \"Bearer \"+this.state.currentUser.token;\n            var token = \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0b2tlbiIsImZpcnN0TmFtZSI6IkFhc2h1dG9zaCIsImxhc3ROYW1lXyI6Ikt1bWFyIiwidXNlcmlkIjoiMyIsImVtYWlsIjoic3VkaGlyLmt1bWFyQHplbW9zb2xhYnMuY29tIn0.WWx7j-Tx0xBkRj_VLA0Wpb3_DhhBPSIhmc24t5g0gZc\";\n\n\n            //let updatedData = [];\n            client.postcomment(userComment, {\"Authorization\": token}, (err, response) => {\n                console.log(response);\n            });\n            //if(!alert('Comments saved!')){window.location.reload();}\n            this.setState({blogCreated: true})\n        }\n\n    }\n\n    render(){\n        const { currentUser, users, searchTerm, blogs, blogCreated } = this.state;\n        return(\n            <div className=\"page\">\n                <PostForm title={this.title} content={this.content} handleOnSubmit={this.handleOnSubmit} />\n                <div className=\"interactions\">\n                    <Search\n                        value = {searchTerm}\n                        onChange = {this.onSearchChange}\n                    >\n                    </Search>\n                </div>\n                <div className=\"row\">\n                    <div className=\"leftcolumn\">\n                        {\n                            blogs.filter(isSearched(searchTerm)).map(blog =>\n                                    <div key={blog.blogid} className=\"card\">\n                                        <BlogTitle blogid={blog.blogid} title={blog.title}/>\n                                        <HeaderTag creationdate ={blog.creationdate} refuser={blog.refuser} />\n                                        <BlogContent blogid={blog.blogid} content={blog.content} />\n                                        <CommentTag blog={blog} handleOnComment={this.handleOnComment}/>\n                                    </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction isSearched(searchTerm) {\n    return function (blog) {\n        return !searchTerm || blog.title.toLowerCase().includes(searchTerm.toLowerCase());\n    }\n}\n\nexport default GetPosts;"]},"metadata":{},"sourceType":"module"}