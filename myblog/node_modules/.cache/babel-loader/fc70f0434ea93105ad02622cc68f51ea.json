{"ast":null,"code":"var _jsxFileName = \"/home/zadmin/Desktop/blog-react/myblog/src/components/helper/GetPosts.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport '../molecules/css/Molecules.css';\nimport { Logincms, Blog, DeletePost, Commentlist, Comment } from '../../cms_pb';\nimport { CmsBlogClient, Metadata } from '../../cms_grpc_web_pb';\nimport BlogTitle from '../atoms/blog-TitleTextArea';\nimport BlogContent from \"../atoms/blog-ContentTextArea\";\nexport default function GetAllPosts() {\n  const blog = [];\n  const [blogs] = useBlog(blog);\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Some text\", blogs.length), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \"You clicked \", count, \" times\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"Click me\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"leftcolumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, blogs.map((blog, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: blog.blogid,\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(BlogTitle, {\n    title: blog.title,\n    blogid: blog.blogid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 37\n    }\n  }, blog.creationdate, \", \", blog.refuser), /*#__PURE__*/React.createElement(BlogContent, {\n    content: blog.content,\n    blogid: blog.blogid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 37\n    }\n  }))))));\n}\n\nfunction useBlog(blog) {\n  const [blogs, setBlogs] = useState([]);\n  const [e, setE] = useState(false);\n  const [l, setL] = useState(false);\n  useEffect(() => {\n    (async () => {\n      setL(true);\n\n      try {\n        var client = new CmsBlogClient('http://localhost:51053');\n        var request = new Logincms();\n        request.setResponsecode(420);\n        request.setResponsemessage(\"Hello\");\n        var header = new Headers();\n        var token = \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0b2tlbiIsImZpcnN0TmFtZSI6IkFhc2h1dG9zaCIsImxhc3ROYW1lXyI6Ikt1bWFyIiwidXNlcmlkIjoiMyIsImVtYWlsIjoic3VkaGlyLmt1bWFyQHplbW9zb2xhYnMuY29tIn0.WWx7j-Tx0xBkRj_VLA0Wpb3_DhhBPSIhmc24t5g0gZc\";\n        client.post(request, {\n          \"Authorization\": token\n        }, (err, response) => {\n          const outerArray = response;\n          {\n            outerArray[\"array\"][1].map(dataitem => {\n              var data = {\n                blogid: dataitem[0],\n                title: dataitem[4],\n                content: dataitem[1],\n                creationdate: dataitem[5],\n                refuser: dataitem[2],\n                comments: dataitem[3]\n              };\n              blogs.push(data);\n              console.log(blogs);\n            });\n          }\n        });\n        setL(false);\n        setBlogs(blogs);\n      } catch (e) {\n        setL(false);\n        setE(true);\n      }\n    })();\n  });\n  return [blogs];\n}\n\nconst [count, setCount] = useState(0);\nconst button = document.querySelector('#myButton');\nbutton.addEventListener('click', () => {\n  setCount(count + 1);\n});\nbutton.click();","map":{"version":3,"sources":["/home/zadmin/Desktop/blog-react/myblog/src/components/helper/GetPosts.jsx"],"names":["React","useState","useEffect","Logincms","Blog","DeletePost","Commentlist","Comment","CmsBlogClient","Metadata","BlogTitle","BlogContent","GetAllPosts","blog","blogs","useBlog","count","setCount","length","map","index","blogid","title","creationdate","refuser","content","setBlogs","e","setE","l","setL","client","request","setResponsecode","setResponsemessage","header","Headers","token","post","err","response","outerArray","dataitem","data","comments","push","console","log","button","document","querySelector","addEventListener","click"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect } from 'react';\nimport '../molecules/css/Molecules.css'\nimport { Logincms, Blog, DeletePost, Commentlist, Comment } from '../../cms_pb';\nimport { CmsBlogClient, Metadata } from '../../cms_grpc_web_pb'\nimport BlogTitle from '../atoms/blog-TitleTextArea';\nimport BlogContent from \"../atoms/blog-ContentTextArea\";\n\n\nexport default function GetAllPosts(){\n    const blog = [];\n    const [blogs] = useBlog(blog)\n    const [count, setCount] = useState(0);\n    \n\n    return(\n        <div className=\"page\">\n            <div className=\"row\" >\n            <p>Some text\n                {blogs.length}\n            </p>\n                <p>You clicked {count} times</p>\n                <button onClick={() => setCount(count + 1)}>\n                    Click me\n                </button>\n                <div className=\"leftcolumn\">\n                    {\n                        blogs.map((blog,index) =>\n                                <div key={blog.blogid} className=\"card\">\n                                    <BlogTitle title={blog.title} blogid={blog.blogid} />\n                                    <h5>{blog.creationdate}, {blog.refuser}</h5>\n                                    <BlogContent content={blog.content} blogid={blog.blogid} />\n                                </div>\n                        )\n                    }\n                </div>\n        </div> \n        </div>   \n    );\n}\n\nfunction useBlog(blog){\n    const [blogs, setBlogs] = useState([]);\n    const[e,setE] = useState(false);\n    const[l,setL] = useState(false);\n    useEffect(() => {\n        (async () =>{\n            setL(true);\n            try{\n                var client = new CmsBlogClient('http://localhost:51053');\n                var request = new Logincms();\n                request.setResponsecode(420);\n                request.setResponsemessage(\"Hello\");\n                var header = new Headers();\n                var token = \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0b2tlbiIsImZpcnN0TmFtZSI6IkFhc2h1dG9zaCIsImxhc3ROYW1lXyI6Ikt1bWFyIiwidXNlcmlkIjoiMyIsImVtYWlsIjoic3VkaGlyLmt1bWFyQHplbW9zb2xhYnMuY29tIn0.WWx7j-Tx0xBkRj_VLA0Wpb3_DhhBPSIhmc24t5g0gZc\";\n                client.post(request, {\"Authorization\": token}, (err, response) => {\n                    const outerArray = response;\n                    {outerArray[\"array\"][1].map((dataitem) => {\n                        var data = {\n                            blogid: dataitem[0],\n                            title: dataitem[4],\n                            content: dataitem[1],\n                            creationdate: dataitem[5],\n                            refuser: dataitem[2],\n                            comments: dataitem[3]\n                        };\n                        blogs.push(data);\n                        console.log(blogs);\n                \n                    })}\n                });\n                setL(false);\n                setBlogs(blogs)\n            }catch(e){\n                setL(false);\n                setE(true);\n            }\n        })();\n    });\n    return [blogs];\n}\n\nconst[count, setCount] = useState(0);\nconst button = document.querySelector('#myButton');\nbutton.addEventListener('click', () => {setCount(count + 1) });\nbutton.click();"]},"metadata":{},"sourceType":"module"}