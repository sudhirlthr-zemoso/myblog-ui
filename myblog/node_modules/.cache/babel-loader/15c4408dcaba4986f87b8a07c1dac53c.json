{"ast":null,"code":"/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.Blog', null, global);\ngoog.exportSymbol('proto.Bloglist', null, global);\ngoog.exportSymbol('proto.Comment', null, global);\ngoog.exportSymbol('proto.Commentlist', null, global);\ngoog.exportSymbol('proto.DeletePost', null, global);\ngoog.exportSymbol('proto.Grpcsocialuser', null, global);\ngoog.exportSymbol('proto.Logincms', null, global);\ngoog.exportSymbol('proto.Usercredential', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.Usercredential = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Usercredential, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Usercredential.displayName = 'proto.Usercredential';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Usercredential.prototype.toObject = function (opt_includeInstance) {\n    return proto.Usercredential.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Usercredential} msg The msg instance to transform.\n   * @return {!Object}\n   */\n\n\n  proto.Usercredential.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      username: msg.getUsername(),\n      password: msg.getPassword()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Usercredential}\n */\n\n\nproto.Usercredential.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Usercredential();\n  return proto.Usercredential.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Usercredential} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Usercredential}\n */\n\n\nproto.Usercredential.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUsername(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPassword(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Usercredential} message\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.Usercredential.serializeBinaryToWriter = function (message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Usercredential.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.Usercredential.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUsername();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = this.getPassword();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Usercredential} The clone.\n */\n\n\nproto.Usercredential.prototype.cloneMessage = function () {\n  return (\n    /** @type {!proto.Usercredential} */\n    jspb.Message.cloneMessage(this)\n  );\n};\n/**\n * optional string username = 1;\n * @return {string}\n */\n\n\nproto.Usercredential.prototype.getUsername = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldProto3(this, 1, \"\")\n  );\n};\n/** @param {string} value  */\n\n\nproto.Usercredential.prototype.setUsername = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n/**\n * optional string password = 2;\n * @return {string}\n */\n\n\nproto.Usercredential.prototype.getPassword = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldProto3(this, 2, \"\")\n  );\n};\n/** @param {string} value  */\n\n\nproto.Usercredential.prototype.setPassword = function (value) {\n  jspb.Message.setField(this, 2, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Logincms = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Logincms, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Logincms.displayName = 'proto.Logincms';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Logincms.prototype.toObject = function (opt_includeInstance) {\n    return proto.Logincms.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Logincms} msg The msg instance to transform.\n   * @return {!Object}\n   */\n\n\n  proto.Logincms.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      responsecode: msg.getResponsecode(),\n      responsemessage: msg.getResponsemessage()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Logincms}\n */\n\n\nproto.Logincms.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Logincms();\n  return proto.Logincms.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Logincms} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Logincms}\n */\n\n\nproto.Logincms.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setResponsecode(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setResponsemessage(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Logincms} message\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.Logincms.serializeBinaryToWriter = function (message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Logincms.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.Logincms.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getResponsecode();\n\n  if (f !== 0) {\n    writer.writeInt32(1, f);\n  }\n\n  f = this.getResponsemessage();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Logincms} The clone.\n */\n\n\nproto.Logincms.prototype.cloneMessage = function () {\n  return (\n    /** @type {!proto.Logincms} */\n    jspb.Message.cloneMessage(this)\n  );\n};\n/**\n * optional int32 responsecode = 1;\n * @return {number}\n */\n\n\nproto.Logincms.prototype.getResponsecode = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldProto3(this, 1, 0)\n  );\n};\n/** @param {number} value  */\n\n\nproto.Logincms.prototype.setResponsecode = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n/**\n * optional string responsemessage = 2;\n * @return {string}\n */\n\n\nproto.Logincms.prototype.getResponsemessage = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldProto3(this, 2, \"\")\n  );\n};\n/** @param {string} value  */\n\n\nproto.Logincms.prototype.setResponsemessage = function (value) {\n  jspb.Message.setField(this, 2, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Blog = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Blog, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Blog.displayName = 'proto.Blog';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Blog.prototype.toObject = function (opt_includeInstance) {\n    return proto.Blog.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Blog} msg The msg instance to transform.\n   * @return {!Object}\n   */\n\n\n  proto.Blog.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      blogid: msg.getBlogid(),\n      content: msg.getContent(),\n      refuser: msg.getRefuser(),\n      comments: (f = msg.getComments()) && proto.Commentlist.toObject(includeInstance, f),\n      title: msg.getTitle(),\n      creationdate: msg.getCreationdate()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Blog}\n */\n\n\nproto.Blog.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Blog();\n  return proto.Blog.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Blog} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Blog}\n */\n\n\nproto.Blog.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setBlogid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setContent(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setRefuser(value);\n        break;\n\n      case 4:\n        var value = new proto.Commentlist();\n        reader.readMessage(value, proto.Commentlist.deserializeBinaryFromReader);\n        msg.setComments(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setTitle(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCreationdate(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Blog} message\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.Blog.serializeBinaryToWriter = function (message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Blog.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.Blog.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getBlogid();\n\n  if (f !== 0) {\n    writer.writeInt64(1, f);\n  }\n\n  f = this.getContent();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = this.getRefuser();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = this.getComments();\n\n  if (f != null) {\n    writer.writeMessage(4, f, proto.Commentlist.serializeBinaryToWriter);\n  }\n\n  f = this.getTitle();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n\n  f = this.getCreationdate();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n};\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Blog} The clone.\n */\n\n\nproto.Blog.prototype.cloneMessage = function () {\n  return (\n    /** @type {!proto.Blog} */\n    jspb.Message.cloneMessage(this)\n  );\n};\n/**\n * optional int64 blogid = 1;\n * @return {number}\n */\n\n\nproto.Blog.prototype.getBlogid = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldProto3(this, 1, 0)\n  );\n};\n/** @param {number} value  */\n\n\nproto.Blog.prototype.setBlogid = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n/**\n * optional string content = 2;\n * @return {string}\n */\n\n\nproto.Blog.prototype.getContent = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldProto3(this, 2, \"\")\n  );\n};\n/** @param {string} value  */\n\n\nproto.Blog.prototype.setContent = function (value) {\n  jspb.Message.setField(this, 2, value);\n};\n/**\n * optional string refuser = 3;\n * @return {string}\n */\n\n\nproto.Blog.prototype.getRefuser = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldProto3(this, 3, \"\")\n  );\n};\n/** @param {string} value  */\n\n\nproto.Blog.prototype.setRefuser = function (value) {\n  jspb.Message.setField(this, 3, value);\n};\n/**\n * optional Commentlist comments = 4;\n * @return {proto.Commentlist}\n */\n\n\nproto.Blog.prototype.getComments = function () {\n  return (\n    /** @type{proto.Commentlist} */\n    jspb.Message.getWrapperField(this, proto.Commentlist, 4)\n  );\n};\n/** @param {proto.Commentlist|undefined} value  */\n\n\nproto.Blog.prototype.setComments = function (value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\nproto.Blog.prototype.clearComments = function () {\n  this.setComments(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return{!boolean}\n */\n\n\nproto.Blog.prototype.hasComments = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional string title = 5;\n * @return {string}\n */\n\n\nproto.Blog.prototype.getTitle = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldProto3(this, 5, \"\")\n  );\n};\n/** @param {string} value  */\n\n\nproto.Blog.prototype.setTitle = function (value) {\n  jspb.Message.setField(this, 5, value);\n};\n/**\n * optional string creationdate = 6;\n * @return {string}\n */\n\n\nproto.Blog.prototype.getCreationdate = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldProto3(this, 6, \"\")\n  );\n};\n/** @param {string} value  */\n\n\nproto.Blog.prototype.setCreationdate = function (value) {\n  jspb.Message.setField(this, 6, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Bloglist = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Bloglist.repeatedFields_, null);\n};\n\ngoog.inherits(proto.Bloglist, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Bloglist.displayName = 'proto.Bloglist';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.Bloglist.repeatedFields_ = [2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Bloglist.prototype.toObject = function (opt_includeInstance) {\n    return proto.Bloglist.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Bloglist} msg The msg instance to transform.\n   * @return {!Object}\n   */\n\n\n  proto.Bloglist.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      bloglistid: msg.getBloglistid(),\n      blogsList: jspb.Message.toObjectList(msg.getBlogsList(), proto.Blog.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Bloglist}\n */\n\n\nproto.Bloglist.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Bloglist();\n  return proto.Bloglist.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Bloglist} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Bloglist}\n */\n\n\nproto.Bloglist.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setBloglistid(value);\n        break;\n\n      case 2:\n        var value = new proto.Blog();\n        reader.readMessage(value, proto.Blog.deserializeBinaryFromReader);\n        msg.getBlogsList().push(value);\n        msg.setBlogsList(msg.getBlogsList());\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Bloglist} message\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.Bloglist.serializeBinaryToWriter = function (message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Bloglist.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.Bloglist.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getBloglistid();\n\n  if (f !== 0) {\n    writer.writeInt64(1, f);\n  }\n\n  f = this.getBlogsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(2, f, proto.Blog.serializeBinaryToWriter);\n  }\n};\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Bloglist} The clone.\n */\n\n\nproto.Bloglist.prototype.cloneMessage = function () {\n  return (\n    /** @type {!proto.Bloglist} */\n    jspb.Message.cloneMessage(this)\n  );\n};\n/**\n * optional int64 bloglistid = 1;\n * @return {number}\n */\n\n\nproto.Bloglist.prototype.getBloglistid = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldProto3(this, 1, 0)\n  );\n};\n/** @param {number} value  */\n\n\nproto.Bloglist.prototype.setBloglistid = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n/**\n * repeated Blog blogs = 2;\n * If you change this array by adding, removing or replacing elements, or if you\n * replace the array itself, then you must call the setter to update it.\n * @return {!Array.<!proto.Blog>}\n */\n\n\nproto.Bloglist.prototype.getBlogsList = function () {\n  return (\n    /** @type{!Array.<!proto.Blog>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.Blog, 2)\n  );\n};\n/** @param {Array.<!proto.Blog>} value  */\n\n\nproto.Bloglist.prototype.setBlogsList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\nproto.Bloglist.prototype.clearBlogsList = function () {\n  this.setBlogsList([]);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Comment = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Comment, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Comment.displayName = 'proto.Comment';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Comment.prototype.toObject = function (opt_includeInstance) {\n    return proto.Comment.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Comment} msg The msg instance to transform.\n   * @return {!Object}\n   */\n\n\n  proto.Comment.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      commentsid: msg.getCommentsid(),\n      content: msg.getContent(),\n      commentsdate: msg.getCommentsdate(),\n      blogid: msg.getBlogid(),\n      refuser: msg.getRefuser()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Comment}\n */\n\n\nproto.Comment.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Comment();\n  return proto.Comment.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Comment} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Comment}\n */\n\n\nproto.Comment.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setCommentsid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setContent(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCommentsdate(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setBlogid(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setRefuser(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Comment} message\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.Comment.serializeBinaryToWriter = function (message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Comment.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.Comment.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getCommentsid();\n\n  if (f !== 0) {\n    writer.writeInt64(1, f);\n  }\n\n  f = this.getContent();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = this.getCommentsdate();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = this.getBlogid();\n\n  if (f !== 0) {\n    writer.writeInt64(4, f);\n  }\n\n  f = this.getRefuser();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n};\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Comment} The clone.\n */\n\n\nproto.Comment.prototype.cloneMessage = function () {\n  return (\n    /** @type {!proto.Comment} */\n    jspb.Message.cloneMessage(this)\n  );\n};\n/**\n * optional int64 commentsid = 1;\n * @return {number}\n */\n\n\nproto.Comment.prototype.getCommentsid = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldProto3(this, 1, 0)\n  );\n};\n/** @param {number} value  */\n\n\nproto.Comment.prototype.setCommentsid = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n/**\n * optional string content = 2;\n * @return {string}\n */\n\n\nproto.Comment.prototype.getContent = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldProto3(this, 2, \"\")\n  );\n};\n/** @param {string} value  */\n\n\nproto.Comment.prototype.setContent = function (value) {\n  jspb.Message.setField(this, 2, value);\n};\n/**\n * optional string commentsdate = 3;\n * @return {string}\n */\n\n\nproto.Comment.prototype.getCommentsdate = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldProto3(this, 3, \"\")\n  );\n};\n/** @param {string} value  */\n\n\nproto.Comment.prototype.setCommentsdate = function (value) {\n  jspb.Message.setField(this, 3, value);\n};\n/**\n * optional int64 blogid = 4;\n * @return {number}\n */\n\n\nproto.Comment.prototype.getBlogid = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldProto3(this, 4, 0)\n  );\n};\n/** @param {number} value  */\n\n\nproto.Comment.prototype.setBlogid = function (value) {\n  jspb.Message.setField(this, 4, value);\n};\n/**\n * optional string refuser = 5;\n * @return {string}\n */\n\n\nproto.Comment.prototype.getRefuser = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldProto3(this, 5, \"\")\n  );\n};\n/** @param {string} value  */\n\n\nproto.Comment.prototype.setRefuser = function (value) {\n  jspb.Message.setField(this, 5, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Commentlist = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Commentlist.repeatedFields_, null);\n};\n\ngoog.inherits(proto.Commentlist, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Commentlist.displayName = 'proto.Commentlist';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.Commentlist.repeatedFields_ = [2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Commentlist.prototype.toObject = function (opt_includeInstance) {\n    return proto.Commentlist.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Commentlist} msg The msg instance to transform.\n   * @return {!Object}\n   */\n\n\n  proto.Commentlist.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      commentlistid: msg.getCommentlistid(),\n      commentsList: jspb.Message.toObjectList(msg.getCommentsList(), proto.Comment.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Commentlist}\n */\n\n\nproto.Commentlist.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Commentlist();\n  return proto.Commentlist.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Commentlist} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Commentlist}\n */\n\n\nproto.Commentlist.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setCommentlistid(value);\n        break;\n\n      case 2:\n        var value = new proto.Comment();\n        reader.readMessage(value, proto.Comment.deserializeBinaryFromReader);\n        msg.getCommentsList().push(value);\n        msg.setCommentsList(msg.getCommentsList());\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Commentlist} message\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.Commentlist.serializeBinaryToWriter = function (message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Commentlist.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.Commentlist.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getCommentlistid();\n\n  if (f !== 0) {\n    writer.writeInt64(1, f);\n  }\n\n  f = this.getCommentsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(2, f, proto.Comment.serializeBinaryToWriter);\n  }\n};\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Commentlist} The clone.\n */\n\n\nproto.Commentlist.prototype.cloneMessage = function () {\n  return (\n    /** @type {!proto.Commentlist} */\n    jspb.Message.cloneMessage(this)\n  );\n};\n/**\n * optional int64 commentlistid = 1;\n * @return {number}\n */\n\n\nproto.Commentlist.prototype.getCommentlistid = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldProto3(this, 1, 0)\n  );\n};\n/** @param {number} value  */\n\n\nproto.Commentlist.prototype.setCommentlistid = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n/**\n * repeated Comment comments = 2;\n * If you change this array by adding, removing or replacing elements, or if you\n * replace the array itself, then you must call the setter to update it.\n * @return {!Array.<!proto.Comment>}\n */\n\n\nproto.Commentlist.prototype.getCommentsList = function () {\n  return (\n    /** @type{!Array.<!proto.Comment>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.Comment, 2)\n  );\n};\n/** @param {Array.<!proto.Comment>} value  */\n\n\nproto.Commentlist.prototype.setCommentsList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\nproto.Commentlist.prototype.clearCommentsList = function () {\n  this.setCommentsList([]);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.DeletePost = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.DeletePost, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.DeletePost.displayName = 'proto.DeletePost';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.DeletePost.prototype.toObject = function (opt_includeInstance) {\n    return proto.DeletePost.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.DeletePost} msg The msg instance to transform.\n   * @return {!Object}\n   */\n\n\n  proto.DeletePost.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      blogid: msg.getBlogid()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DeletePost}\n */\n\n\nproto.DeletePost.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DeletePost();\n  return proto.DeletePost.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DeletePost} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DeletePost}\n */\n\n\nproto.DeletePost.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setBlogid(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.DeletePost} message\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.DeletePost.serializeBinaryToWriter = function (message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.DeletePost.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.DeletePost.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getBlogid();\n\n  if (f !== 0) {\n    writer.writeInt64(1, f);\n  }\n};\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.DeletePost} The clone.\n */\n\n\nproto.DeletePost.prototype.cloneMessage = function () {\n  return (\n    /** @type {!proto.DeletePost} */\n    jspb.Message.cloneMessage(this)\n  );\n};\n/**\n * optional int64 blogid = 1;\n * @return {number}\n */\n\n\nproto.DeletePost.prototype.getBlogid = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldProto3(this, 1, 0)\n  );\n};\n/** @param {number} value  */\n\n\nproto.DeletePost.prototype.setBlogid = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Grpcsocialuser = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Grpcsocialuser, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  proto.Grpcsocialuser.displayName = 'proto.Grpcsocialuser';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto suitable for use in Soy templates.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n   *     for transitional soy proto support: http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Grpcsocialuser.prototype.toObject = function (opt_includeInstance) {\n    return proto.Grpcsocialuser.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Whether to include the JSPB\n   *     instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Grpcsocialuser} msg The msg instance to transform.\n   * @return {!Object}\n   */\n\n\n  proto.Grpcsocialuser.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      userid: msg.getUserid(),\n      email: msg.getEmail(),\n      firstname: msg.getFirstname(),\n      lastname: msg.getLastname(),\n      token: msg.getToken()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Grpcsocialuser}\n */\n\n\nproto.Grpcsocialuser.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Grpcsocialuser();\n  return proto.Grpcsocialuser.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Grpcsocialuser} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Grpcsocialuser}\n */\n\n\nproto.Grpcsocialuser.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setUserid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setEmail(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setFirstname(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setLastname(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setToken(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Grpcsocialuser} message\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.Grpcsocialuser.serializeBinaryToWriter = function (message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Grpcsocialuser.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\n\n\nproto.Grpcsocialuser.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUserid();\n\n  if (f !== 0) {\n    writer.writeInt64(1, f);\n  }\n\n  f = this.getEmail();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = this.getFirstname();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = this.getLastname();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = this.getToken();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n};\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Grpcsocialuser} The clone.\n */\n\n\nproto.Grpcsocialuser.prototype.cloneMessage = function () {\n  return (\n    /** @type {!proto.Grpcsocialuser} */\n    jspb.Message.cloneMessage(this)\n  );\n};\n/**\n * optional int64 userid = 1;\n * @return {number}\n */\n\n\nproto.Grpcsocialuser.prototype.getUserid = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldProto3(this, 1, 0)\n  );\n};\n/** @param {number} value  */\n\n\nproto.Grpcsocialuser.prototype.setUserid = function (value) {\n  jspb.Message.setField(this, 1, value);\n};\n/**\n * optional string email = 2;\n * @return {string}\n */\n\n\nproto.Grpcsocialuser.prototype.getEmail = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldProto3(this, 2, \"\")\n  );\n};\n/** @param {string} value  */\n\n\nproto.Grpcsocialuser.prototype.setEmail = function (value) {\n  jspb.Message.setField(this, 2, value);\n};\n/**\n * optional string firstName = 3;\n * @return {string}\n */\n\n\nproto.Grpcsocialuser.prototype.getFirstname = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldProto3(this, 3, \"\")\n  );\n};\n/** @param {string} value  */\n\n\nproto.Grpcsocialuser.prototype.setFirstname = function (value) {\n  jspb.Message.setField(this, 3, value);\n};\n/**\n * optional string lastName = 4;\n * @return {string}\n */\n\n\nproto.Grpcsocialuser.prototype.getLastname = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldProto3(this, 4, \"\")\n  );\n};\n/** @param {string} value  */\n\n\nproto.Grpcsocialuser.prototype.setLastname = function (value) {\n  jspb.Message.setField(this, 4, value);\n};\n/**\n * optional string token = 5;\n * @return {string}\n */\n\n\nproto.Grpcsocialuser.prototype.getToken = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldProto3(this, 5, \"\")\n  );\n};\n/** @param {string} value  */\n\n\nproto.Grpcsocialuser.prototype.setToken = function (value) {\n  jspb.Message.setField(this, 5, value);\n};\n\ngoog.object.extend(exports, proto);","map":{"version":3,"sources":["/home/zadmin/Desktop/blog-react/myblog/src/cms_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","Usercredential","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","username","getUsername","password","getPassword","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setUsername","setPassword","skipField","serializeBinaryToWriter","message","writer","serializeBinary","BinaryWriter","getResultBuffer","undefined","length","writeString","cloneMessage","getFieldProto3","setField","Logincms","responsecode","getResponsecode","responsemessage","getResponsemessage","readInt32","setResponsecode","setResponsemessage","writeInt32","Blog","blogid","getBlogid","content","getContent","refuser","getRefuser","comments","getComments","Commentlist","title","getTitle","creationdate","getCreationdate","readInt64","setBlogid","setContent","setRefuser","readMessage","setComments","setTitle","setCreationdate","writeInt64","writeMessage","getWrapperField","setWrapperField","clearComments","hasComments","getField","Bloglist","repeatedFields_","bloglistid","getBloglistid","blogsList","toObjectList","getBlogsList","setBloglistid","push","setBlogsList","writeRepeatedMessage","getRepeatedWrapperField","setRepeatedWrapperField","clearBlogsList","Comment","commentsid","getCommentsid","commentsdate","getCommentsdate","setCommentsid","setCommentsdate","commentlistid","getCommentlistid","commentsList","getCommentsList","setCommentlistid","setCommentsList","clearCommentsList","DeletePost","Grpcsocialuser","userid","getUserid","email","getEmail","firstname","getFirstname","lastname","getLastname","token","getToken","setUserid","setEmail","setFirstname","setLastname","setToken","object","extend","exports"],"mappings":"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","sourcesContent":["/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.Blog', null, global);\ngoog.exportSymbol('proto.Bloglist', null, global);\ngoog.exportSymbol('proto.Comment', null, global);\ngoog.exportSymbol('proto.Commentlist', null, global);\ngoog.exportSymbol('proto.DeletePost', null, global);\ngoog.exportSymbol('proto.Grpcsocialuser', null, global);\ngoog.exportSymbol('proto.Logincms', null, global);\ngoog.exportSymbol('proto.Usercredential', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Usercredential = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Usercredential, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Usercredential.displayName = 'proto.Usercredential';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Usercredential.prototype.toObject = function(opt_includeInstance) {\n  return proto.Usercredential.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Usercredential} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Usercredential.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: msg.getUsername(),\n    password: msg.getPassword()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Usercredential}\n */\nproto.Usercredential.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Usercredential;\n  return proto.Usercredential.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Usercredential} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Usercredential}\n */\nproto.Usercredential.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Usercredential} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Usercredential.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Usercredential.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Usercredential.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Usercredential} The clone.\n */\nproto.Usercredential.prototype.cloneMessage = function() {\n  return /** @type {!proto.Usercredential} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string username = 1;\n * @return {string}\n */\nproto.Usercredential.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Usercredential.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string password = 2;\n * @return {string}\n */\nproto.Usercredential.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Usercredential.prototype.setPassword = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Logincms = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Logincms, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Logincms.displayName = 'proto.Logincms';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Logincms.prototype.toObject = function(opt_includeInstance) {\n  return proto.Logincms.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Logincms} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Logincms.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    responsecode: msg.getResponsecode(),\n    responsemessage: msg.getResponsemessage()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Logincms}\n */\nproto.Logincms.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Logincms;\n  return proto.Logincms.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Logincms} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Logincms}\n */\nproto.Logincms.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setResponsecode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setResponsemessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Logincms} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Logincms.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Logincms.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Logincms.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getResponsecode();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = this.getResponsemessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Logincms} The clone.\n */\nproto.Logincms.prototype.cloneMessage = function() {\n  return /** @type {!proto.Logincms} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional int32 responsecode = 1;\n * @return {number}\n */\nproto.Logincms.prototype.getResponsecode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));\n};\n\n\n/** @param {number} value  */\nproto.Logincms.prototype.setResponsecode = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string responsemessage = 2;\n * @return {string}\n */\nproto.Logincms.prototype.getResponsemessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Logincms.prototype.setResponsemessage = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Blog = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Blog, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Blog.displayName = 'proto.Blog';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Blog.prototype.toObject = function(opt_includeInstance) {\n  return proto.Blog.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Blog} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Blog.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    blogid: msg.getBlogid(),\n    content: msg.getContent(),\n    refuser: msg.getRefuser(),\n    comments: (f = msg.getComments()) && proto.Commentlist.toObject(includeInstance, f),\n    title: msg.getTitle(),\n    creationdate: msg.getCreationdate()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Blog}\n */\nproto.Blog.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Blog;\n  return proto.Blog.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Blog} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Blog}\n */\nproto.Blog.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBlogid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setContent(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRefuser(value);\n      break;\n    case 4:\n      var value = new proto.Commentlist;\n      reader.readMessage(value,proto.Commentlist.deserializeBinaryFromReader);\n      msg.setComments(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreationdate(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Blog} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Blog.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Blog.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Blog.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getBlogid();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = this.getContent();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRefuser();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getComments();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.Commentlist.serializeBinaryToWriter\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getCreationdate();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Blog} The clone.\n */\nproto.Blog.prototype.cloneMessage = function() {\n  return /** @type {!proto.Blog} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional int64 blogid = 1;\n * @return {number}\n */\nproto.Blog.prototype.getBlogid = function() {\n  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));\n};\n\n\n/** @param {number} value  */\nproto.Blog.prototype.setBlogid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string content = 2;\n * @return {string}\n */\nproto.Blog.prototype.getContent = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Blog.prototype.setContent = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string refuser = 3;\n * @return {string}\n */\nproto.Blog.prototype.getRefuser = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Blog.prototype.setRefuser = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional Commentlist comments = 4;\n * @return {proto.Commentlist}\n */\nproto.Blog.prototype.getComments = function() {\n  return /** @type{proto.Commentlist} */ (\n    jspb.Message.getWrapperField(this, proto.Commentlist, 4));\n};\n\n\n/** @param {proto.Commentlist|undefined} value  */\nproto.Blog.prototype.setComments = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.Blog.prototype.clearComments = function() {\n  this.setComments(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return{!boolean}\n */\nproto.Blog.prototype.hasComments = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional string title = 5;\n * @return {string}\n */\nproto.Blog.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Blog.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string creationdate = 6;\n * @return {string}\n */\nproto.Blog.prototype.getCreationdate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Blog.prototype.setCreationdate = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Bloglist = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Bloglist.repeatedFields_, null);\n};\ngoog.inherits(proto.Bloglist, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Bloglist.displayName = 'proto.Bloglist';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.Bloglist.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Bloglist.prototype.toObject = function(opt_includeInstance) {\n  return proto.Bloglist.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Bloglist} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Bloglist.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    bloglistid: msg.getBloglistid(),\n    blogsList: jspb.Message.toObjectList(msg.getBlogsList(),\n    proto.Blog.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Bloglist}\n */\nproto.Bloglist.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Bloglist;\n  return proto.Bloglist.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Bloglist} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Bloglist}\n */\nproto.Bloglist.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBloglistid(value);\n      break;\n    case 2:\n      var value = new proto.Blog;\n      reader.readMessage(value,proto.Blog.deserializeBinaryFromReader);\n      msg.getBlogsList().push(value);\n      msg.setBlogsList(msg.getBlogsList());\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Bloglist} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Bloglist.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Bloglist.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Bloglist.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getBloglistid();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = this.getBlogsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.Blog.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Bloglist} The clone.\n */\nproto.Bloglist.prototype.cloneMessage = function() {\n  return /** @type {!proto.Bloglist} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional int64 bloglistid = 1;\n * @return {number}\n */\nproto.Bloglist.prototype.getBloglistid = function() {\n  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));\n};\n\n\n/** @param {number} value  */\nproto.Bloglist.prototype.setBloglistid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * repeated Blog blogs = 2;\n * If you change this array by adding, removing or replacing elements, or if you\n * replace the array itself, then you must call the setter to update it.\n * @return {!Array.<!proto.Blog>}\n */\nproto.Bloglist.prototype.getBlogsList = function() {\n  return /** @type{!Array.<!proto.Blog>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.Blog, 2));\n};\n\n\n/** @param {Array.<!proto.Blog>} value  */\nproto.Bloglist.prototype.setBlogsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\nproto.Bloglist.prototype.clearBlogsList = function() {\n  this.setBlogsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Comment = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Comment, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Comment.displayName = 'proto.Comment';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Comment.prototype.toObject = function(opt_includeInstance) {\n  return proto.Comment.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Comment} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Comment.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    commentsid: msg.getCommentsid(),\n    content: msg.getContent(),\n    commentsdate: msg.getCommentsdate(),\n    blogid: msg.getBlogid(),\n    refuser: msg.getRefuser()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Comment}\n */\nproto.Comment.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Comment;\n  return proto.Comment.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Comment} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Comment}\n */\nproto.Comment.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCommentsid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setContent(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCommentsdate(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBlogid(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRefuser(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Comment} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Comment.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Comment.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Comment.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getCommentsid();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = this.getContent();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getCommentsdate();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getBlogid();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = this.getRefuser();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Comment} The clone.\n */\nproto.Comment.prototype.cloneMessage = function() {\n  return /** @type {!proto.Comment} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional int64 commentsid = 1;\n * @return {number}\n */\nproto.Comment.prototype.getCommentsid = function() {\n  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));\n};\n\n\n/** @param {number} value  */\nproto.Comment.prototype.setCommentsid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string content = 2;\n * @return {string}\n */\nproto.Comment.prototype.getContent = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Comment.prototype.setContent = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string commentsdate = 3;\n * @return {string}\n */\nproto.Comment.prototype.getCommentsdate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Comment.prototype.setCommentsdate = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 blogid = 4;\n * @return {number}\n */\nproto.Comment.prototype.getBlogid = function() {\n  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));\n};\n\n\n/** @param {number} value  */\nproto.Comment.prototype.setBlogid = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string refuser = 5;\n * @return {string}\n */\nproto.Comment.prototype.getRefuser = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Comment.prototype.setRefuser = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Commentlist = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Commentlist.repeatedFields_, null);\n};\ngoog.inherits(proto.Commentlist, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Commentlist.displayName = 'proto.Commentlist';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.Commentlist.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Commentlist.prototype.toObject = function(opt_includeInstance) {\n  return proto.Commentlist.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Commentlist} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Commentlist.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    commentlistid: msg.getCommentlistid(),\n    commentsList: jspb.Message.toObjectList(msg.getCommentsList(),\n    proto.Comment.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Commentlist}\n */\nproto.Commentlist.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Commentlist;\n  return proto.Commentlist.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Commentlist} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Commentlist}\n */\nproto.Commentlist.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCommentlistid(value);\n      break;\n    case 2:\n      var value = new proto.Comment;\n      reader.readMessage(value,proto.Comment.deserializeBinaryFromReader);\n      msg.getCommentsList().push(value);\n      msg.setCommentsList(msg.getCommentsList());\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Commentlist} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Commentlist.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Commentlist.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Commentlist.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getCommentlistid();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = this.getCommentsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.Comment.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Commentlist} The clone.\n */\nproto.Commentlist.prototype.cloneMessage = function() {\n  return /** @type {!proto.Commentlist} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional int64 commentlistid = 1;\n * @return {number}\n */\nproto.Commentlist.prototype.getCommentlistid = function() {\n  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));\n};\n\n\n/** @param {number} value  */\nproto.Commentlist.prototype.setCommentlistid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * repeated Comment comments = 2;\n * If you change this array by adding, removing or replacing elements, or if you\n * replace the array itself, then you must call the setter to update it.\n * @return {!Array.<!proto.Comment>}\n */\nproto.Commentlist.prototype.getCommentsList = function() {\n  return /** @type{!Array.<!proto.Comment>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.Comment, 2));\n};\n\n\n/** @param {Array.<!proto.Comment>} value  */\nproto.Commentlist.prototype.setCommentsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\nproto.Commentlist.prototype.clearCommentsList = function() {\n  this.setCommentsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.DeletePost = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.DeletePost, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.DeletePost.displayName = 'proto.DeletePost';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.DeletePost.prototype.toObject = function(opt_includeInstance) {\n  return proto.DeletePost.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.DeletePost} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.DeletePost.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    blogid: msg.getBlogid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DeletePost}\n */\nproto.DeletePost.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DeletePost;\n  return proto.DeletePost.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DeletePost} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DeletePost}\n */\nproto.DeletePost.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBlogid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.DeletePost} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.DeletePost.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.DeletePost.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.DeletePost.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getBlogid();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.DeletePost} The clone.\n */\nproto.DeletePost.prototype.cloneMessage = function() {\n  return /** @type {!proto.DeletePost} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional int64 blogid = 1;\n * @return {number}\n */\nproto.DeletePost.prototype.getBlogid = function() {\n  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));\n};\n\n\n/** @param {number} value  */\nproto.DeletePost.prototype.setBlogid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Grpcsocialuser = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Grpcsocialuser, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Grpcsocialuser.displayName = 'proto.Grpcsocialuser';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Grpcsocialuser.prototype.toObject = function(opt_includeInstance) {\n  return proto.Grpcsocialuser.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Grpcsocialuser} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Grpcsocialuser.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    userid: msg.getUserid(),\n    email: msg.getEmail(),\n    firstname: msg.getFirstname(),\n    lastname: msg.getLastname(),\n    token: msg.getToken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Grpcsocialuser}\n */\nproto.Grpcsocialuser.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Grpcsocialuser;\n  return proto.Grpcsocialuser.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Grpcsocialuser} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Grpcsocialuser}\n */\nproto.Grpcsocialuser.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setUserid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmail(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFirstname(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLastname(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setToken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Grpcsocialuser} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Grpcsocialuser.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Grpcsocialuser.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Grpcsocialuser.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUserid();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = this.getEmail();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getFirstname();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getLastname();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getToken();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Grpcsocialuser} The clone.\n */\nproto.Grpcsocialuser.prototype.cloneMessage = function() {\n  return /** @type {!proto.Grpcsocialuser} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional int64 userid = 1;\n * @return {number}\n */\nproto.Grpcsocialuser.prototype.getUserid = function() {\n  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));\n};\n\n\n/** @param {number} value  */\nproto.Grpcsocialuser.prototype.setUserid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string email = 2;\n * @return {string}\n */\nproto.Grpcsocialuser.prototype.getEmail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Grpcsocialuser.prototype.setEmail = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string firstName = 3;\n * @return {string}\n */\nproto.Grpcsocialuser.prototype.getFirstname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Grpcsocialuser.prototype.setFirstname = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string lastName = 4;\n * @return {string}\n */\nproto.Grpcsocialuser.prototype.getLastname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Grpcsocialuser.prototype.setLastname = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string token = 5;\n * @return {string}\n */\nproto.Grpcsocialuser.prototype.getToken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Grpcsocialuser.prototype.setToken = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\ngoog.object.extend(exports, proto);\n"]},"metadata":{},"sourceType":"module"}